import React, { ReactNode, useState, useEffect } from 'react';
import Link from 'next/link';
import { useRouter } from 'next/router';
import { motion, AnimatePresence } from 'framer-motion';
import { FaFileAlt, FaTools, FaChartBar, FaUserEdit, FaCog, FaBars, FaTimes, FaRegBell, FaSearch, FaQuestionCircle } from 'react-icons/fa';
import { RiRobot2Fill, RiRocketLine, RiShieldStarLine } from 'react-icons/ri';

// --- Modern Glassmorphic Layout ---

interface LayoutProps {
  children: ReactNode;
}

const navItems = [
  { path: '/', name: 'Dashboard', icon: <FaChartBar /> },
  { path: '/scanner', name: 'Resume Scanner', icon: <FaFileAlt /> },
  { path: '/builder', name: 'Resume Builder', icon: <FaUserEdit /> },
  { path: '/optimization-tips', name: 'Optimization Tips', icon: <FaTools /> },
  { path: '/settings', name: 'Settings', icon: <FaCog /> },
];

const Layout: React.FC<LayoutProps> = ({ children }) => {
  const router = useRouter();
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
  const [scrolled, setScrolled] = useState(false);
  const [searchFocused, setSearchFocused] = useState(false);

  const isActive = (path: string) => router.pathname === path;

  useEffect(() => {
    const handleScroll = () => setScrolled(window.scrollY > 10);
    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  // Animation variants
  const sidebarVariants = {
    open: { x: 0, opacity: 1, transition: { type: 'spring', stiffness: 300, damping: 30 } },
    closed: { x: '-100%', opacity: 0, transition: { type: 'spring', stiffness: 300, damping: 30 } },
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-primary-50 to-secondary-50">
      {/* Header */}
      <header className={`fixed top-0 left-0 right-0 z-30 bg-white/60 backdrop-blur-lg shadow-lg ${scrolled ? 'shadow-2xl' : ''} transition-all duration-300`}> 
        <div className="flex items-center justify-between px-4 md:px-8 py-3 max-w-[1920px] mx-auto">
          {/* Mobile menu button */}
          <button 
            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
            className="p-2 mr-2 rounded-full bg-primary-50 text-primary-600 hover:bg-primary-100 transition-colors md:hidden"
            aria-label="Toggle menu"
          >
            <AnimatePresence mode="wait">
              <motion.div
                key={isMobileMenuOpen ? 'close' : 'open'}
                initial={{ rotate: -90, opacity: 0 }}
                animate={{ rotate: 0, opacity: 1 }}
                exit={{ rotate: 90, opacity: 0 }}
                transition={{ duration: 0.2 }}
              >
                {isMobileMenuOpen ? <FaTimes /> : <FaBars />}
              </motion.div>
            </AnimatePresence>
          </button>
          {/* Logo */}
          <Link href="/" className="flex items-center">
            <motion.div
              whileHover={{ scale: 1.1, rotate: 10 }}
              className="mr-3 text-3xl text-primary-600 bg-primary-100 p-2 rounded-xl shadow-md"
            >
              <RiRobot2Fill />
            </motion.div>
            <div>
              <h1 className="text-xl font-bold text-secondary-900 tracking-tight">Resume ATS</h1>
              <p className="text-xs text-secondary-500">AI-Powered Optimization</p>
            </div>
          </Link>
          {/* Search bar - hidden on mobile */}
          <div className="hidden md:flex items-center relative max-w-md w-full mx-4">
            <span className={`absolute left-3 top-1/2 -translate-y-1/2 text-primary-400 transition-colors ${searchFocused ? 'text-primary-600' : ''}`}><FaSearch /></span>
            <input
              type="text"
              placeholder="Search..."
              className={`w-full py-2 pl-10 pr-4 rounded-xl bg-white/70 shadow-inner border border-primary-100 focus:outline-none focus:ring-2 focus:ring-primary-400 transition-all text-secondary-800 ${searchFocused ? 'ring-2 ring-primary-400 bg-white' : ''}`}
              onFocus={() => setSearchFocused(true)}
              onBlur={() => setSearchFocused(false)}
            />
          </div>
          {/* Notification and Help icons */}
          <div className="flex items-center gap-2">
            <button className="p-2 rounded-full text-primary-500 hover:bg-primary-50 transition-colors"><FaRegBell /></button>
            <button className="p-2 rounded-full text-primary-500 hover:bg-primary-50 transition-colors"><FaQuestionCircle /></button>
          </div>
        </div>
      </header>

      {/* Sidebar (desktop) & Drawer (mobile) */}
      <div className="flex pt-20">
        {/* Sidebar for desktop */}
        <nav className="hidden md:flex flex-col w-64 min-h-[calc(100vh-5rem)] bg-white/70 backdrop-blur-lg shadow-xl rounded-tr-3xl rounded-br-3xl mt-6 ml-4 py-8 px-4 z-20">
          <div className="flex-1 flex flex-col gap-2">
            {navItems.map((item, idx) => (
              <Link key={item.path} href={item.path} className={`flex items-center px-5 py-3 rounded-xl font-medium text-lg transition-all duration-300 gap-3 ${isActive(item.path) ? 'bg-primary-600 text-white shadow-lg' : 'text-secondary-700 hover:bg-primary-100 hover:text-primary-700'}`}> 
                <motion.span animate={{ scale: isActive(item.path) ? 1.15 : 1, color: isActive(item.path) ? '#fff' : undefined }} transition={{ type: 'spring', stiffness: 300, damping: 20 }} className="text-2xl">{item.icon}</motion.span>
                <span>{item.name}</span>
                {isActive(item.path) && <motion.div layoutId="activeIndicator" className="ml-auto w-2 h-2 rounded-full bg-white shadow" transition={{ type: 'spring', stiffness: 300, damping: 30 }} />}
              </Link>
            ))}
          </div>
          <div className="mt-auto pt-8 border-t border-primary-100 text-xs text-secondary-400 text-center">
            <p>Resume ATS Optimizer</p>
            <p>Version 1.0.0</p>
          </div>
        </nav>
        {/* Drawer for mobile */}
        <AnimatePresence>
          {isMobileMenuOpen && (
            <motion.nav
              initial="closed"
              animate="open"
              exit="closed"
              variants={sidebarVariants}
              className="fixed inset-0 z-40 bg-black/40 flex md:hidden"
              onClick={() => setIsMobileMenuOpen(false)}
            >
              <motion.div
                initial={{ x: '-100%' }}
                animate={{ x: 0 }}
                exit={{ x: '-100%' }}
                transition={{ type: 'spring', stiffness: 300, damping: 30 }}
                className="w-72 bg-white/90 backdrop-blur-xl h-full shadow-2xl rounded-tr-3xl rounded-br-3xl flex flex-col py-8 px-4"
                onClick={e => e.stopPropagation()}
              >
                <div className="mb-8 flex items-center gap-3">
                  <div className="text-3xl text-primary-600 bg-primary-100 p-2 rounded-xl"><RiRobot2Fill /></div>
                  <div>
                    <h1 className="text-xl font-bold text-secondary-900">Resume ATS</h1>
                    <p className="text-xs text-secondary-500">AI-Powered Optimization</p>
                  </div>
                </div>
                <div className="flex-1 flex flex-col gap-2">
                  {navItems.map((item, idx) => (
                    <Link key={item.path} href={item.path} className={`flex items-center px-5 py-3 rounded-xl font-medium text-lg transition-all duration-300 gap-3 ${isActive(item.path) ? 'bg-primary-600 text-white shadow-lg' : 'text-secondary-700 hover:bg-primary-100 hover:text-primary-700'}`} onClick={() => setIsMobileMenuOpen(false)}>
                      <motion.span animate={{ scale: isActive(item.path) ? 1.15 : 1, color: isActive(item.path) ? '#fff' : undefined }} transition={{ type: 'spring', stiffness: 300, damping: 20 }} className="text-2xl">{item.icon}</motion.span>
                      <span>{item.name}</span>
                      {isActive(item.path) && <motion.div layoutId="mobileActiveIndicator" className="ml-auto w-2 h-2 rounded-full bg-white shadow" transition={{ type: 'spring', stiffness: 300, damping: 30 }} />}
                    </Link>
                  ))}
                </div>
                <div className="mt-auto pt-8 border-t border-primary-100 text-xs text-secondary-400 text-center">
                  <p>Resume ATS Optimizer</p>
                  <p>Version 1.0.0</p>
                </div>
              </motion.div>
            </motion.nav>
          )}
        </AnimatePresence>
        {/* Main Content */}
        <main className="flex-1 overflow-y-auto pt-4 pb-8 px-4 md:px-8">
          <div className="max-w-7xl mx-auto">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.5 }}
              className="min-h-[calc(100vh-8rem)]"
            >
              {children}
            </motion.div>
          </div>
        </main>
      </div>
    </div>
  );
};

export default Layout;
